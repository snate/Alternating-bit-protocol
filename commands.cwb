input "github/Alternating-bit-protocol/abp.cwb";

*******************************************************************************

deadlocks(ReliableABP);
deadlocks(UnreliableABP);

*******************************************************************************

game(Spec,ReliableABP);

*******************************************************************************

strongeq(Spec,ReliableABP);
dfstrong(Spec,ReliableABP);
dfstrong(ReliableABP,Spec);

strongeq(Spec,UnreliableABP);
dfstrong(Spec,UnreliableABP);

strongeq(ReliableABP,UnreliableABP);
dfstrong(ReliableABP,UnreliableABP);

*******************************************************************************

pre(ReliableABP,Spec);
pre(UnreliableABP,Spec);

*******************************************************************************

dfweak(Spec,ReliableABP);
dfweak(Spec,UnreliableABP);
dfweak(ReliableABP,UnreliableABP);

*******************************************************************************

cp (ReliableABP, Can(tau));
checkprop (ReliableABP, Even(<ok0>T));
checkprop (ReliableABP, Even(<ok1>T));
checkprop (ReliableABP, Even([[ok0]]<ok1>T) & Even([[ok1]]<ok0>T));
checkprop (ReliableABP, Fair);
checkprop (ReliableABP, NoConsecutiveSameNumber);
checkprop (ReliableABP, Livelock);

checkprop (UnreliableABP, Fair);
checkprop (UnreliableABP, NoConsecutiveSameNumber);
checkprop (UnreliableABP, Livelock);

checkprop (LoudReliableABP, LoudOk0);
checkprop (LoudReliableABP, LoudOk1);
checkprop (LoudReliableABP, LoudOk);

checkprop (LoudUnreliableABP, LoudOk0);
checkprop (LoudUnreliableABP, LoudOk1);
checkprop (LoudUnreliableABP, LoudOk);
